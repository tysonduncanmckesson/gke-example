name: Deploy Workflow
on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
      image-tag:
        description: 'Docker tag to deploy'
        required: true
        default: 'latest'

env:
  # TODO: Change to name of your Docker Registry (eg. mck-team-name.jfrog.io)
  DOCKER_REGISTRY: "mck-b2b-connect-docker.jfrog.io/b2b-connect/"
  IMAGE_TAG: "${{ github.event.inputs.image-tag }}"
  ENV: "${{ github.event.inputs.deploy-environment }}"

jobs:
  deploy:
    name: "${{ github.event.inputs.deploy-environment }} deploy tag : ${{ github.event.inputs.image-tag }}"
    environment: ${{ github.event.inputs.deploy-environment }}
    runs-on: kube-deploy
    defaults:
      run:
        shell: bash
    container:
      image: mck-tech-platform-srvs.jfrog.io/kubectl:latest
      credentials:
        username: ${{ secrets.DEV_PORTAL_JFROG_USERNAME }}
        password: ${{ secrets.DEV_PORTAL_JFROG_API_KEY }}
    steps:

      - name: Set up Kustomize
        run: |-
          curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
          chmod u+x ./kustomize
          mv kustomize $HOME/.local/bin

      # Configure --- Really could be more elegant
      - name: Configure and Deploy
        run: |-
          set -x
          pushd devops/deploy/k8s/base
          kustomize edit set image $DOCKER_IMAGE_NAME:${{ steps.version-tag.outputs.TAG }}
          popd
          mkdir -p descriptors/
          cp -pr devops/env/* devops/deploy/k8s/
          kustomize build devops/deploy/k8s/overlays/${ENV} -o descriptors/${ENV}.yaml
          cp descriptors/${ENV}.yaml manifest-${ENV}.yml

      - name: Validate Deployment
        run: |
          if [ "$ENV" = "prod" ] && [ "$IMAGE_TAG" = "latest" ]; then
            echo "Prod deployment with latest tag is not allowed, please select a semantic version"
            exit 1
          else
            echo "Valid deployment"
          fi

      - name: Get Manifest File
        uses: actions/checkout@v2

      - name: "Deploy to ${{ github.event.inputs.deploy-environment }} cluster"
        env:
          KUBERNETES_SERVICE_ACCOUNT: ${{ secrets.DEV_PORTAL_KUBE_SA_US }}
          MANIFEST_NAME: manifest-${{ env.ENV }}.yml
          CLUSTER_TYPE: "GKE" # Change to AKS for AKS deployments
          CLUSTER_REGION: "US" # Change to EU for EU deployments
        run: |
          # Setting up cluster configurations, config files are in the kubectl image
          # https://github.com/mckesson/pltsrv-kube-apps/tree/master/kubectl
          source /gke/gke-clusters.config
          source /aks/aks-clusters.config
          if [ "$ENV" = "prod" ]; then
            PROD=$(eval "echo \${CLUSTER_TYPE}_\${CLUSTER_REGION}PROD")
            SHARED_CLUSTER="\$${PROD}"
          else
            DEV=$(eval "echo  \${CLUSTER_TYPE}_\${CLUSTER_REGION}DEV")
            SHARED_CLUSTER="\$${DEV}"
          fi
          # Set shared cluster cert and API
          eval CLUSTER_CERT="${SHARED_CLUSTER}_CERT"
          eval CLUSTER_API="${SHARED_CLUSTER}_API"

          kubectl \
            --token="$KUBERNETES_SERVICE_ACCOUNT" \
            --certificate-authority=$CLUSTER_CERT \
            --server=$CLUSTER_API \
            apply -f -
      - if: github.event.inputs.deploy-environment == 'prod'
        name: Mark Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: ${{ env.IMAGE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
